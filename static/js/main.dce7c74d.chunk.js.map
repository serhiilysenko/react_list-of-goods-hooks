{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortDirection","goodsFromServer","buttons","name","class","App","useState","sortBy","setSortBy","direction","setDirection","preparedGoods","goods","sort","reverse","allGoods","good1","good2","alph","localeCompare","len","length","sortList","className","map","button","type","cn","onClick","item","ReactDOM","render","document","getElementById"],"mappings":"6KAKKA,E,oFAAAA,K,eAAAA,E,iBAAAA,E,kBAAAA,M,KAME,IAAMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAU,CACrB,CACEC,KAAM,sBACNC,MAAO,WAET,CACED,KAAM,iBACNC,MAAO,eAiCEC,EAAgB,WAC3B,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAjCgB,SACtBC,EACAC,EACAC,GAEA,IAAMC,EAAQ,YAAOH,GAqBrB,OAnBIC,GACFE,EAASF,MAAK,SAACG,EAAOC,GACpB,OAAQJ,GACN,KAAKb,EAAckB,KACjB,OAAOF,EAAMG,cAAcF,GAE7B,KAAKjB,EAAcoB,IACjB,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXP,GACFC,EAASD,UAGJC,EAOeO,CAASrB,EAAiBM,EAAQE,GAOxD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACGrB,EAAQsB,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SAELH,UAAWI,IACT,SADW,UAERF,EAAOrB,OAAS,CACjB,WAAYG,IAAWkB,EAAOrB,QAGlCwB,QAAS,WACPpB,EAAUiB,EAAOrB,QAVrB,SAaGqB,EAAOtB,MAXHsB,EAAOrB,UAehB,wBACEsB,KAAK,SACLH,UAAWI,IACT,oBAAqB,CACnB,YAAalB,IAGjBmB,QAAS,WACPlB,GAAcD,IARlB,sBAca,KAAXF,GAAiBE,IACjB,wBACEiB,KAAK,SACLH,UAAU,4BACVK,QA5CI,WACZpB,EAAU,IACVE,GAAa,IAuCP,sBAUJ,6BACGC,EAAca,KAAI,SAAAK,GAAI,OACrB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC1HjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dce7c74d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nenum SortDirection {\n  alph = 'is-info',\n  len = 'is-success',\n  rev = 'is-warning',\n}\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const buttons = [\n  {\n    name: 'Sort alphabetically',\n    class: 'is-info',\n  },\n  {\n    name: 'Sort by length',\n    class: 'is-success',\n  },\n];\n\nexport const sortList = (\n  goods: string[],\n  sort: SortDirection | string,\n  reverse: boolean,\n) => {\n  const allGoods = [...goods];\n\n  if (sort) {\n    allGoods.sort((good1, good2) => {\n      switch (sort) {\n        case SortDirection.alph:\n          return good1.localeCompare(good2);\n\n        case SortDirection.len:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    allGoods.reverse();\n  }\n\n  return allGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState('');\n  const [direction, setDirection] = useState(false);\n\n  const preparedGoods = sortList(goodsFromServer, sortBy, direction);\n\n  const reset = () => {\n    setSortBy('');\n    setDirection(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        {buttons.map(button => (\n          <button\n            type=\"button\"\n            key={button.class}\n            className={cn(\n              'button',\n              `${button.class}`, {\n                'is-light': sortBy !== button.class,\n              },\n            )}\n            onClick={() => {\n              setSortBy(button.class);\n            }}\n          >\n            {button.name}\n          </button>\n        ))}\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning', {\n              'is-light': !direction,\n            },\n          )}\n          onClick={() => {\n            setDirection(!direction);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortBy !== '' || direction) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {preparedGoods.map(item => (\n          <li\n            data-cy=\"Good\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}